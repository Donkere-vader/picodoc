#!/bin/python3

import unittest
from tests import TestSetting, TestDict, TestList, TestConvert
import argparse
import sys
import os
import tests.config


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Run tests for the picodoc module')
    parser.add_argument(
        '--keep-db',
        action='store_true',
        help='Keep the testing db after the testing is done.'
    )
    parser.add_argument(
        '--force-db-reset',
        action='store_true',
        help='Force reset the testing DB if it already exists.'
    )
    parser.add_argument(
        '--fail-fast',
        action='store_true',
        help='Exit on first testcase error',
    )
    args = parser.parse_args()

    if tests.config.TEST_DB_NAME in os.listdir() and not args.force_db_reset:
        if input(f"Database '{tests.config.TEST_DB_NAME}' Already exists. Continuing will delete all data.\nDo you wish to continue? [Y/n] ").lower().strip() not in ["y", ""]:
            exit()

    unittest.main(
        exit=False,
        argv=[sys.argv[0]],
        failfast=args.fail_fast,
    )

    if not args.keep_db and tests.config.TEST_DB_NAME in os.listdir():
        os.remove(tests.config.TEST_DB_NAME)
